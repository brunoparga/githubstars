FORMAT: 1A

# Github Stars

The Github Stars API allows the consumer to see the repositores a given Github
user has starred. Then one can add and manage tags on the repositories. The
"react" repo, for example, could be tagged with "javascript" and "front-end".

Repositories and their tags are persisted in a PostgreSQL database. Due to the
statelessness of HTTP, each call to the initial route - looking for a user's
repos - clears the DB of existing repos and their tags. The tags themselves, as
distinct from their association with repos, are kept for future usage - e.g. for
tag recommendation purposes.

A forthcoming version of the API will keep track of the username, saving Github
API calls, improving DB usage (since the cleanup for each call won't be needed)
and allowing for better tag recommendations.

# Group Repositories

Resources related to repositories in the API.

## Collection Repositores [/api/starred_by/{username}]

A Repository object has the following attributes:

+ name - the plain name of the repo, without its owning account
+ description
+ github_id - may be different from the local ID
+ html_url - repo location on Github
+ language - main language of the code; may be undefined

+ Parameters
    + username: brunoparga (required, string) - the API fetches the repositories
      starred by this user.

### List a user's starred repositories [GET]

Fetch a user's starred repositories.

+ Response 200 (application/json; charset=utf-8)

        {
          "username": "brunoparga",
          "repositories": [
            {
              "github_id": 18442377,
              "name": "dotfiles",
              "description": "Default configuration for Le Wagon's students",
              "html_url": "https://github.com/lewagon/dotfiles",
              "language": "Shell"
            }, {
              "github_id": 18486300,
              "name": "setup",
              "description": "Setup instructions for Le Wagon's students on their first day of camp",
              "html_url": "https://github.com/lewagon/setup",
              "language": "Ruby"
            }, {
              "github_id": 118746761,
              "name": "challenge-development",
              "description": "A cool development challenge for our awesome future team",
              "html_url": "https://github.com/brainn-co/challenge-development",
              "language": "undefined"
            }
          ]
        }

## Repositories with a given tag [/api/search_by_tag/{tag_name}]

+ Parameters
    + tag_name: doc (required, string) - Search for tags beginning with this
      string and all their repositories

### Find repositories by (partial) tag name [GET]

Look up the user's repos with a given tag. All tags matching the given string as
the beginning of their name are included in the search: `doc` matches both
`docker` and `documentation`.

+ Response 200 (application/json; charset=utf-8)

        {
            "search_tag": "doc",
            "results": [
                {
                    "matching_tag": "documentation",
                    "repositories": [
                        {
                            "id": 18442377,
                            "name": "dotfiles",
                            "description": "Default configuration for Le Wagon's students",
                            "html_url": "https://github.com/lewagon/dotfiles",
                            "language": "Shell"
                        }
                    ]
                }, {
                    "matching_tag": "docker",
                    "repositories": [
                        {
                            "id": 18486300,
                            "name": "setup",
                            "description": "Setup instructions for Le Wagon's students on their first day of camp",
                            "html_url": "https://github.com/lewagon/setup",
                            "language": "Ruby"
                        }, {
                            "id": 118746761,
                            "name": "challenge-development",
                            "description": "A cool development challenge for our awesome future team",
                            "html_url": "https://github.com/brainn-co/challenge-development",
                            "language": "undefined"
                        }
                    ]
                }
            ]
        }

# Group Tags

Resources related to tags in the API.

## Repository Tag [/api/apply_tag/{repository_id}]

A Tag object has the following attribute:

+ name

+ Parameters
    + repository_id: 118746761 (required, integer) - Github ID of the Repository

### Apply tag to repository [POST]

Apply a given tag to the repository, unless it is already present.

+ Request (application/json)

        {
            "tag_name": "challenging"
        }

+ Response 201 (application/json; charset=utf-8)

    + Headers

            Location: /repositories/118746761

    + Body

            {
                "repository_name": "challenge-development",
                "tag_list": [
                    {
                        "tag_name": "challenging"
                    }
                ]
            }

## Tag recommendations [/api/recommend_tags/{repository_id}]

Should the user need ideas for tags for their repos, they can get recommendations
via this route. The repo language, if it exists, is always recommended; if it is
undefined, the most likely reason is that the repo contains documentation, so
the corresponding tag is suggested.

+ Parameters
    + repository_id: 118746761 (required, integer) - Github ID of the Repository

### Get recommendations [GET]

+ Response 200 (application/json; charset=utf-8)

        {
            "repository_name": "react",
            "recommended_tags": [
                {
                    "recommended_tag": "javascript"
                }, {
                    "recommended_tag": "front-end"
                }, {
                    "recommended_tag": "framework"
                }
            ]
        }
